{"version":3,"sources":["components/FindInput/styles.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contacts-action.js","redux/contacts/contacts-operations.js","components/Form/index.jsx","components/ContactList/index.jsx","components/FindInput/index.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/styles.module.css","components/ContactList/styles.module.css"],"names":["module","exports","getContactsItems","state","contacts","items","getFilter","filter","getLoadingContacts","loading","getError","error","getVisibleContacts","createSelector","normalizedfilter","toLowerCase","name","includes","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","filterChange","axios","defaults","baseURL","actions","number","dispatch","contact","complited","post","then","data","catch","id","delete","Number","a","get","INITIAL_STATE","Form","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","some","elem","window","alert","reset","onAddContact","this","className","form","onSubmit","nameStyle","input","type","pattern","title","required","onChange","tel","button","Component","connect","contactsSelectors","contactsOperations","onDeleteContact","target","fetchContacts","useEffect","list","length","map","item","text","onClick","onFilterChange","filterstyle","isLoadingContacts","errorContacts","message","stack","createReducer","_","payload","newArr","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,MAAQ,wB,uKCK9DC,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAE3CC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAqB3B,GACbC,mBA5ByB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SA6BjDC,SA3Be,SAAAP,GAAK,OAAIA,EAAMC,SAASO,OA4BvCT,mBACAI,YACAM,mBAfyBC,YACzB,CAACX,EAAkBI,IACnB,SAACD,EAAOE,GACN,IAAMO,EAAmBP,EAAOQ,cAChC,OAAOV,EAAME,QAAO,YAClB,OADgC,EAAXS,KACTD,cAAcE,SAASH,U,iDCH1B,GACbI,kBAfwBC,YAAa,2BAgBrCC,kBAfwBD,YAAa,2BAgBrCE,gBAfsBF,YAAa,yBAgBnCG,qBAd2BH,YAAa,qCAexCI,qBAd2BJ,YAAa,qCAexCK,mBAdyBL,YAAa,mCAetCM,oBAb0BN,YAAa,oCAcvCO,oBAb0BP,YAAa,oCAcvCQ,kBAbwBR,YAAa,kCAcrCS,aAZmBT,YAAa,4BCjBlCU,IAAMC,SAASC,QAAU,wBAEzB,IACEb,EASEc,EATFd,kBACAE,EAQEY,EARFZ,kBACAC,EAOEW,EAPFX,gBACAC,EAMEU,EANFV,qBACAC,EAKES,EALFT,qBACAC,EAIEQ,EAJFR,mBACAC,EAGEO,EAHFP,oBACAC,EAEEM,EAFFN,oBACAC,EACEK,EADFL,kBAwCa,EArCI,SAAC,GAAD,IAAGX,EAAH,EAAGA,KAAMiB,EAAT,EAASA,OAAT,OAAsB,SAAAC,GACvC,IAAMC,EAAU,CAAEnB,OAAMiB,SAAQG,WAAW,GAE3CF,EAAShB,KAETW,IACGQ,KAAK,YAAaF,GAClBG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASd,EAAkBmB,OAC9CC,OAAM,SAAA7B,GAAK,OAAIuB,EAASb,EAAgBV,SA6B9B,EA1BO,SAAA8B,GAAE,OAAI,SAAAP,GAC1BA,EAASZ,KAETO,IACGa,OADH,oBACuBD,IACpBH,MAAK,kBAAMJ,EAASX,EAAqBoB,OAAOF,QAChDD,OAAM,SAAA7B,GAAK,OAAIuB,EAASV,EAAmBb,SAoBjC,EAhBO,yDAAM,WAAMuB,GAAN,iBAAAU,EAAA,6DAC1BV,EAAST,KADiB,kBAIDI,IAAMgB,IAAI,aAJT,gBAIhBN,EAJgB,EAIhBA,KAERL,EAASR,EAAoBa,IANL,gDAQxBL,EAASP,EAAkB,EAAD,KARF,yDAAN,uD,cC7BhBmB,EAAgB,CACpB9B,KAAM,GACNiB,OAAQ,IAGJc,E,4MACJ5C,MAAQ,CACNa,KAAM,GACNiB,OAAQ,I,EAGVe,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBlC,EAAR,EAAQA,KAAMmC,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBpC,EAAOmC,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBACN,IAAMtC,EAAO,EAAKb,MAAMa,KACxB,GAAI,EAAKuC,MAAMlD,MAAMmD,MAAK,SAAAC,GAAI,OAAIA,EAAKzC,OAASA,KAG9C,OAFA0C,OAAOC,MAAP,UAAgB3C,EAAhB,iCACA,EAAK4C,QAGP,EAAKL,MAAMM,aAAa,EAAK1D,OAE7B,EAAKyD,S,EAEPA,MAAQ,WACN,EAAKR,UAAS,WACZ,OAAO,eAAKN,O,4CAGhB,WACE,MAAyBgB,KAAK3D,MAAtBa,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,OACd,OACE,uBAAM8B,UAAWC,OAAMC,SAAUH,KAAKT,aAAtC,UACE,wBAAOU,UAAWG,YAAlB,iBAEE,uBACEH,UAAWI,QAEXC,KAAK,OACLpD,KAAK,OACLmC,MAAOnC,EACPqD,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUV,KAAKd,kBAGnB,wBAAOe,UAAWG,YAAlB,yBAEE,uBACEH,UAAWU,MACXL,KAAK,MACLpD,KAAK,SACLmC,MAAOlB,EACPoC,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAAUV,KAAKd,kBAGnB,wBAAQe,UAAWW,SAAQN,KAAK,SAAhC,oC,GA3DWO,aAmFJC,eAjBS,SAAAzE,GACtB,MAAO,CACLE,MAAOwE,EAAkB3E,iBAAiBC,OAGnB,SAAA+B,GACzB,MAAO,CACL2B,aAAc,gBAAG7C,EAAH,EAAGA,KAAMiB,EAAT,EAASA,OAAT,OACZC,EACE4C,EAA8B,CAE5B9D,OACAiB,gBAKK2C,CAA6C7B,G,OCzD5D,IAYe6B,eAZS,SAAAzE,GACtB,MAAO,CACLE,MAAOwE,EAAkBjE,mBAAmBT,OAGrB,SAAA+B,GACzB,MAAO,CACL6C,gBAAiB,SAAA9B,GAAK,OACpBf,EAAS4C,EAAiC7B,EAAM+B,OAAOvC,MACzDwC,cAAe,kBAAM/C,EAAS4C,SAGnBF,EA3Cf,YAAiE,IAA1CG,EAAyC,EAAzCA,gBAAiBE,EAAwB,EAAxBA,cAAe5E,EAAS,EAATA,MAGrD,OAFA6E,qBAAU,kBAAMD,MAAiB,IAG/B,oBAAIlB,UAAWoB,OAAf,SACG9E,EAAM+E,OAAS,GACd/E,EAAMgF,KAAI,gBAAG5C,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMiB,EAAb,EAAaA,OAAb,OACR,qBAAI8B,UAAWuB,OAAf,UACE,uBAAMvB,UAAWwB,OAAjB,UAAwBvE,EAAxB,OACA,sBAAM+C,UAAWwB,OAAjB,SAAwBtD,IACxB,wBACE8B,UAAWW,SACXjC,GAAIA,EACJ2B,KAAK,SACLoB,QAAST,EAJX,sBAHwBtC,W,QCUpC,IAWemC,eAXS,SAAAzE,GACtB,MAAO,CACLI,OAAQsE,EAAkBvE,UAAUH,OAGb,SAAA+B,GACzB,MAAO,CACLuD,eAAgB,SAAAxC,GAAK,OACnBf,EAASF,EAAQJ,aAAaqB,EAAMC,cAAcC,YAGzCyB,EA9Bf,YAAgD,IAA3Ba,EAA0B,EAA1BA,eAAgBlF,EAAU,EAAVA,OACnC,OACE,wBAAOwD,UAAWO,QAAlB,mCAEE,uBACEP,UAAW2B,cAEXtB,KAAK,OACLpD,KAAK,SACLmC,MAAO5C,EACP8D,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUiB,U,MCQlB,I,MAIeb,eAJS,SAAAzE,GAAK,MAAK,CAChCwF,kBAAmBd,EAAkBrE,mBAAmBL,GACxDyF,cAAef,EAAkBnE,SAASP,MAE7ByE,EAxBf,YAAoD,IAArCe,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,cAEhC,OACE,sBAAK7B,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,uBACA,cAAC,EAAD,IACA,oBAAIA,UAAU,YAAd,sBACC4B,GAAqB,4CACrBC,GACC,sBAAK7B,UAAU,QAAf,UACE,6BAAK6B,EAAc5E,OACnB,4BAAI4E,EAAcC,UAClB,4BAAID,EAAcE,WAGtB,cAAC,EAAD,IACA,cAAC,EAAD,U,eCjBJ5E,EAUEc,EAVFd,kBACAE,EASEY,EATFZ,kBACAC,GAQEW,EARFX,gBACAC,GAOEU,EAPFV,qBACAC,GAMES,EANFT,qBACAC,GAKEQ,EALFR,mBACAC,GAIEO,EAJFP,oBACAC,GAGEM,EAHFN,oBACAC,GAEEK,EAFFL,kBACAC,GACEI,EADFJ,aAGIvB,GAAQ0F,YAAc,IAAD,mBACxBrE,IAAsB,SAACsE,EAAD,YAAMC,WADJ,cAExB7E,GAAoB,SAACjB,EAAD,OAAU8F,EAAV,EAAUA,QAAV,4BAA4B9F,GAA5B,CAAmC8F,OAF/B,cAGxB1E,IAAuB,SAACpB,EAAD,GAAyB,IAAf8F,EAAc,EAAdA,QAC1BC,EAAS/F,EAAMI,QAAO,SAAAkD,GAAI,OAAIA,EAAKhB,KAAOwD,KAEhD,OAAO,YAAIC,MANY,IAUrB3F,GAASwF,YAAc,GAAD,eACzBnE,IAAe,SAACoE,EAAD,YAAMC,YAGlBxF,GAAUsF,aAAc,GAAD,mBAC1B7E,GAAoB,kBAAM,KADA,cAE1BE,GAAoB,kBAAM,KAFA,cAG1BC,IAAkB,kBAAM,KAHE,cAI1BC,IAAuB,kBAAM,KAJH,cAK1BC,IAAuB,kBAAM,KALH,cAM1BC,IAAqB,kBAAM,KAND,cAO1BC,IAAsB,kBAAM,KAPF,cAQ1BC,IAAsB,kBAAM,KARF,cAS1BC,IAAoB,kBAAM,KATA,IAYvBhB,GAAQoF,YAAc,MAAD,mBACxB1E,IAAkB,SAAClB,EAAD,YAAU8F,WADJ,cAExBzE,IAAqB,SAACrB,EAAD,YAAU8F,WAFP,cAGxBtE,IAAoB,SAACxB,EAAD,YAAU8F,WAHN,IAMZE,eAAgB,CAC7B9F,SACAE,UACAE,WACAE,W,4BCvCIyF,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAaaC,GAVDC,YAAe,CAC3BC,QAAS,CACP7G,SAAU8G,IAEZd,cACAe,UAAUC,IChBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAEE,cAAC,EAAD,QAIJS,SAASC,eAAe,U,kBCpB1BzH,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,0BAA0B,MAAQ,sBAAsB,IAAM,oBAAoB,OAAS,yB,kBCArJD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,0B","file":"static/js/main.1cbbf22a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterstyle\":\"styles_filterstyle__3pB0A\",\"title\":\"styles_title__2l1if\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoadingContacts = state => state.contacts.loading;\r\n\r\nconst getError = state => state.contacts.error;\r\n\r\nconst getContactsItems = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\n// const getVisibleContacts = state => {\r\n//   const filter = getFilter(state);\r\n//   const items = getContactsItems(state);\r\n//   const normalizedfilter = filter.toLowerCase();\r\n//   return items.filter(({ name }) => {\r\n//     return name.toLowerCase().includes(normalizedfilter);\r\n//   });\r\n// };\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContactsItems, getFilter],\r\n  (items, filter) => {\r\n    const normalizedfilter = filter.toLowerCase();\r\n    return items.filter(({ name }) => {\r\n      return name.toLowerCase().includes(normalizedfilter);\r\n    });\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoadingContacts,\r\n  getError,\r\n  getContactsItems,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","// import actionTypes from \"./contacts-types\";\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// const addContact = createAction(\"form/Add_contact\", ({ id, name, number }) => ({\r\n//   payload: { id, name, number },\r\n// }));\r\n\r\nconst addContactRequest = createAction('form/Add_contactRequest');\r\nconst addContactSuccess = createAction('form/Add_contactSuccess');\r\nconst addContactError = createAction('form/Add_contactError');\r\n\r\nconst deleteContactRequest = createAction('contactList/Delete_contactRequest');\r\nconst deleteContactSuccess = createAction('contactList/Delete_contactSuccess');\r\nconst deleteContactError = createAction('contactList/Delete_contactError');\r\n\r\nconst fetchContactRequest = createAction('contactList/fetch_contactRequest');\r\nconst fetchContactSuccess = createAction('contactList/fetch_contactSuccess');\r\nconst fetchContactError = createAction('contactList/fetch_contactError');\r\n\r\nconst filterChange = createAction('findInput/Filter_change');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  filterChange,\r\n};\r\n","import axios from 'axios';\r\nimport actions from './contacts-action';\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} = actions;\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  const contact = { name, number, complited: false };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(Number(id))))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\n//async method wariant\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n\r\n  // axios\r\n  //   .get('/contacts')\r\n  //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n  //   .catch(error => dispatch(fetchContactError(error)));\r\n};\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\r\n\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\n// import contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport { form, nameStyle, input, tel, button } from './styles.module.css';\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const name = this.state.name;\r\n    if (this.props.items.some(elem => elem.name === name)) {\r\n      window.alert(`${name} is already in contacts`);\r\n      this.reset();\r\n      return;\r\n    }\r\n    this.props.onAddContact(this.state);\r\n\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState(() => {\r\n      return { ...INITIAL_STATE };\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={form} onSubmit={this.handleSubmit}>\r\n        <label className={nameStyle}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            // autocomplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={nameStyle}>\r\n          📞\r\n          <input\r\n            className={tel}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={button} type=\"submit\">\r\n          Add to contacts\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: contactsSelectors.getContactsItems(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddContact: ({ name, number }) =>\r\n      dispatch(\r\n        contactsOperations.addContact({\r\n          // id: uuidv4(),\r\n          name,\r\n          number,\r\n        }),\r\n      ),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { connect } from 'react-redux';\r\nimport { React, useEffect } from 'react';\r\n\r\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\r\n\r\n// import PropTypes from \"prop-types\";\r\nimport { list, item, text, button } from './styles.module.css';\r\n\r\nfunction ContactList({ onDeleteContact, fetchContacts, items }) {\r\n  useEffect(() => fetchContacts(), []);\r\n\r\n  return (\r\n    <ul className={list}>\r\n      {items.length > 0 &&\r\n        items.map(({ id, name, number }) => (\r\n          <li className={item} key={id}>\r\n            <span className={text}>{name}:</span>\r\n            <span className={text}>{number}</span>\r\n            <button\r\n              className={button}\r\n              id={id}\r\n              type=\"button\"\r\n              onClick={onDeleteContact}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// const filterContacts = ({ items, filter }) => {\r\n//   const normalizedfilter = filter.toLowerCase();\r\n//   return items.filter(({ name }) => {\r\n//     return name.toLowerCase().includes(normalizedfilter);\r\n//   });\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: contactsSelectors.getVisibleContacts(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: event =>\r\n      dispatch(contactsOperations.deleteContact(event.target.id)),\r\n    fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { filterstyle, title } from './styles.module.css';\r\n\r\nimport { contactsSelectors, actions } from '../../redux/contacts';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nfunction FindInput({ onFilterChange, filter }) {\r\n  return (\r\n    <label className={title}>\r\n      Find contacts by name:\r\n      <input\r\n        className={filterstyle}\r\n        // autocomplete=\"off\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={onFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: contactsSelectors.getFilter(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFilterChange: event =>\r\n      dispatch(actions.filterChange(event.currentTarget.value)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindInput);\r\n","import Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport FindInput from './components/FindInput';\nimport { connect } from 'react-redux';\nimport { contactsSelectors } from './redux/contacts';\nimport './styles.css';\n\nfunction App({ isLoadingContacts, errorContacts }) {\n  // console.dir(errorContacts);\n  return (\n    <div className=\"container\">\n      <h1 className=\"main_title\">Phonebook</h1>\n      <Form />\n      <h2 className=\"sub_title\">Contacts</h2>\n      {isLoadingContacts && <h1>Loading...</h1>}\n      {errorContacts && (\n        <div className=\"error\">\n          <h1>{errorContacts.name}</h1>\n          <p>{errorContacts.message}</p>\n          <p>{errorContacts.stack}</p>\n        </div>\n      )}\n      <FindInput />\n      <ContactList />\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  isLoadingContacts: contactsSelectors.getLoadingContacts(state),\n  errorContacts: contactsSelectors.getError(state),\n});\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import actionTypes from \"../contacts/contacts-types\";\r\nimport actions from './contacts-action';\r\n\r\nconst {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  filterChange,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => {\r\n    const newArr = state.filter(elem => elem.id !== payload);\r\n    // console.log(\"action delete:\", newArr);\r\n    return [...newArr];\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [addContactError]: (state, { payload }) => payload,\r\n  [deleteContactError]: (state, { payload }) => payload,\r\n  [fetchContactError]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\nimport {\r\n  // persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport logger from 'redux-logger';\r\n\r\n// console.log(\"getDefaultMiddleware \", getDefaultMiddleware());\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n// import store from \"./redux/store\";\n// import { myAction, myAction2 } from \"./redux/actions\";\n\n// console.log(\"store is: \", store);\n// console.log(\"store dispatch action is: \", store.dispatch(myAction(5)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__x6ERe\",\"nameStyle\":\"styles_nameStyle__3_S20\",\"input\":\"styles_input__3-cEE\",\"tel\":\"styles_tel__e6S56\",\"button\":\"styles_button__yAwM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__2V6Zm\",\"item\":\"styles_item__hSzYg\",\"text\":\"styles_text__25zCY\",\"button\":\"styles_button__3AST2\"};"],"sourceRoot":""}